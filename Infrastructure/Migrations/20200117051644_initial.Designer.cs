// <auto-generated />
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(PruebaContext))]
    [Migration("20200117051644_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstLastName")
                        .IsRequired()
                        .HasColumnName("first_lastname")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SecondLastName")
                        .HasColumnName("second_lastname")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SecondName")
                        .HasColumnName("secondname")
                        .HasColumnType("varchar(50)");

                    b.Property<long>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 0L,
                            FirstLastName = "Andrés",
                            FirstName = "Carlos",
                            SecondLastName = "García",
                            SecondName = "Castilla",
                            UpdatedAt = 0L,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = 0L,
                            FirstLastName = "Test",
                            FirstName = "Test",
                            SecondLastName = "Test",
                            SecondName = "Test",
                            UpdatedAt = 0L,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(20);

                    b.Property<short>("State")
                        .HasColumnName("state")
                        .HasColumnType("smallint");

                    b.Property<long>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = 0L,
                            Password = "AR4uQBbIGbJZh/snXG5ozGIWcow4/zlRBdUh6Do8Z32F33oWGNcVBzCHNwoBxSWk/Q==",
                            State = (short)1,
                            UpdatedAt = 0L,
                            Username = "zeros"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = 0L,
                            Password = "AYINXkIRKuCWM8HRdIQma04OeOOs5JLGBLZ0jtM4HLdWuIIR4taIqcaJV6RDkI9xKQ==",
                            State = (short)1,
                            UpdatedAt = 0L,
                            Username = "test"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
